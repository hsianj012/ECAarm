function [Fx, Fy, Fz, Tx, Ty, Tz] = lvmToForces(filename)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   FTDATA = IMPORTFILE(FILENAME) Reads data from text file FILENAME for
%   the default selection.
%
%   FTDATA = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   FTData = importfile('FTData.lvm', 23, 22606);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/06/24 10:04:55
% Edits by jhsiang on 2014/06/24 10:30 AM

%% Initialize variables.
delimiter = '\t';
startRow = 23;
endRow = inf;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
FTData = [dataArray{1:end-1}];
dataLength = size(FTData,1)/6;

Fx = zeros(1,dataLength);
Fy = zeros(1,dataLength);
Fz = zeros(1,dataLength);
Tx = zeros(1,dataLength);
Ty = zeros(1,dataLength);
Tz = zeros(1,dataLength);

for i = 1:(dataLength-1)
    Fx(i)=FTData(6*(i-1)+1,2);
    Fy(i)=FTData(6*(i-1)+2,2);
    Fz(i)=FTData(6*(i-1)+3,2);
    Tx(i)=FTData(6*(i-1)+4,2);
    Ty(i)=FTData(6*(i-1)+5,2);
    Tz(i)=FTData(6*(i-1)+6,2);
end
